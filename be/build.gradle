plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.jetbrains.kotlin.jvm' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.noarg' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.allopen' version '1.9.22'
}

group = 'sg'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.postgresql:r2dbc-postgresql:1.0.7.RELEASE'
	implementation "io.r2dbc:r2dbc-pool"
	implementation 'org.mapstruct:mapstruct:1.6.3'
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation platform('org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.7.3')
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test'

	testRuntimeOnly 'io.r2dbc:r2dbc-h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '21'
	}
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
		}
		kotlin {
			srcDirs = ['src/main/kotlin']
		}
	}
	test {
		java {
			srcDirs = ['src/test/java']
		}
		kotlin {
			srcDirs = ['src/test/kotlin']
		}
	}
}

tasks.compileJava {
	dependsOn tasks.compileKotlin
	classpath += files(tasks.compileKotlin.destinationDirectory)
}

allOpen {
	annotation("org.springframework.context.annotation.Configuration")
	annotation("org.springframework.stereotype.Service")
	annotation("org.springframework.stereotype.Component")
	annotation("org.springframework.stereotype.Repository")
	annotation("org.springframework.boot.autoconfigure.SpringBootApplication")
	annotation("org.springframework.scheduling.annotation.Async")
	annotation("javax.persistence.Entity")
	annotation("javax.persistence.MappedSuperclass")
	annotation("javax.persistence.Embeddable")
}
